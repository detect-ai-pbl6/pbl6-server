name: CI-dev

on:
  pull_request:
    branches: [ "dev" ]
  workflow_call:
    inputs:
      run_ci:
        type: string
        description: "Run CI step"
        required: false
        default: "false"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ vars.DEV_IMAGE_NAME }}
      IMAGE_TAG: ${{ github.sha }}
      PROJECT_ID: ${{ secrets.DEV_GCP_PROJECT_ID }}
      ARTIFACT_REPOSITORY: ${{ vars.DEV_GCP_ARTIFACT_REPOSITORY }}
      REGION: ${{ vars.DEV_GCP_REGION }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8==4.0.1
    - name: Run Flake8
      run: |
        flake8

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      if: ${{ inputs.run_ci == 'true' }}  # Only set up Docker Buildx on push events

    - name: Build Image
      uses: docker/build-push-action@v6
      if: ${{ inputs.run_ci == 'true' }}   # Only set up Docker Buildx on push events
      with:
          load: true
          tags: |
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
            latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            ENV=production
          # outputs: type=docker,dest=/tmp/image.tar

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.28.0
      if: ${{ inputs.run_ci == 'true' }}
      with:
          image-ref: latest
          format: 'table'
          # exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

    - name: Expose Image
      uses: docker/build-push-action@v6
      if: ${{ inputs.run_ci == 'true' }}   # Only set up Docker Buildx on push events
      with:
          load: true
          tags: |
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
            latest
          outputs: type=docker,dest=/tmp/image.tar

    - name: Upload Image
      uses: actions/upload-artifact@v4
      if: ${{ inputs.run_ci == 'true' }}
      with:
          name: image
          path: /tmp/image.tar
