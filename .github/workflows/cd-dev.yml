---
name: CD-dev

on:
    push:
        branches: [dev]

jobs:

    deploy:
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: ${{ vars.DEV_IMAGE_NAME }}
            IMAGE_TAG: ${{ github.sha }}
            PROJECT_ID: ${{ secrets.DEV_GCP_PROJECT_ID }}
            ARTIFACT_REPOSITORY: ${{ vars.DEV_GCP_ARTIFACT_REPOSITORY }}
            REGION: ${{ vars.DEV_GCP_REGION }}
            TEST_TAG: trivy-test

        steps:

            - name: code checkout
              uses: actions/checkout@v2

            - name: GCP Authentication
              uses: google-github-actions/auth@v2
              id: gcp_authentication
              with:
                  credentials_json: ${{ secrets.DEV_GCP_CREDENTIALS }}

            - name: Set up Cloud SDK
              uses: google-github-actions/setup-gcloud@v2

            - name: Configure Docker Client
              run: |-
                  gcloud auth configure-docker --quiet
                  gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and Push Image
              uses: docker/build-push-action@v6
              with:
                  push: true
                  tags: |
                      ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
                      ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                      ENV=production

            - name: Deploy to VMs
              run: |
                  instances=$(gcloud compute instances list --filter="name~'-backend-'" --format="csv(name,zone)" | tail -n +2)

                  # Loop through each instance
                  while IFS=',' read -r name zone; do
                      echo "Executing command on instance: $name in zone: $zone"

                      # SSH into the instance and run a command (e.g., `uptime`)
                      gcloud compute ssh "$name" --tunnel-through-iap \
                          --zone "$zone" \
                          --command "
                              gcloud auth configure-docker --quiet
                              gcloud auth configure-docker  ${{ env.REGION }}-docker.pkg.dev --quiet
                              sudo yq e '.services."backend-service".image = \"${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}\"' -i /etc/docker/docker-compose.yml
                              cd /etc/docker
                              sudo docker pull ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
                              sudo docker compose down
                              sudo docker compose up -d --build
                              sudo docker image prune --all -f"

                  done <<<"$instances"
